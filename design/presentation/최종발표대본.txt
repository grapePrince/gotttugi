

오뚜기 페이지를 리뉴얼한 이예지이빈다. 

저는 지난 발표때 보여드렸던 디자인에서 실제 화면이 바뀐 부분이 많이 있는데요. 
PT상으로는 앞부분은 바뀐게 없어서 빠르게 넘어가고 개발 및 기능 구현을 발표하면서 디자인도 함꼐 보여드릴 예정입니다. 

리뉴얼한 홈페이지의 현 상황입니다. 
아직도 크롬에서 잘 동작하지 않고 있는데 어떨 때는 될 때도 있습니다. 
분석 내용과 벤치마킹 내용은 넘어가도록 하겠습니다. 

이번 오뚜기 홈페이지 리뉴얼의 목표는 
디자인을 모던하게 바꾸는것, 사이트맵을 정리하는것, 반응형 지원
생동감 있는 애니메이션 등이었습니다. 
사이트맵 부분과 디자인 콘셉트, 스타일 가이드 등은 넘어가도록 하겠습니다.

그럼 제가 구현한 기능들과 구현 방법들을 소개하도록 하겠습니다. 



(CSS 컨벤션)

개발을 진행하면서 CSS 방법론을 몇 개 차용하여 코딩을 진행하였습니다.
어떻게 활용하였는지 간략하게 소개하도록 하겠습니다. 
컴퓨터 사이언스에서는 이름 짓는 일의 어려움에 대한 악명을 느낄 수 있는 다음과 같은 명언이 있습니다. 이 명언처럼 저도 이름을 지을 때 너무 많은 시간을 쓰고 있다는 생각을 하게 되었고 보완하기 위해 다음과 같은 방법론을 활용하였습니다. 

OOCSS 기법에서는 CSS 에서의 객체지향개발방법론을 제시하고 있습니다. 
중복되는 디자인 요소를 따로 빼서 CSS를 정리하여 다른 곳에서 재활용 할 수 있게 하였습니다. 
하지만 아직 위치에 의존적인 스타일을 정의하지 않기 위해서 연습이 조금 더 필요할 것 같스빈다. 
SMACSS 기법에서는 layout 과 모양을 따로 구분해서 class 를 지정할 것을 권장하고 있습니다. 

BEM 기법에서는 블록을 기준으로 네임을 지정하고 아래 밑줄과 하이픈을 활용해 이름을 짓는 것을 권장하고 있는데요. 
아래처럼 사람이라고 하면 다리와 눈이 같은 하위요소를 밑줄로 구분하고 
눈 중에서도 기본모양, 렌즈를 낀 모양, 컬러가 있는데 붉은색이다 파란색이다 이런 종류를 하이픈을 활용해 구분하는 기법입니다.

이러한 CSS 방법론을 사용하여 개발을 진행한 결과 HTML 이 너무 복잡해졌다는 단점이 있지만 이름 짓는 데 걸리는 시간이 확연하게 줄어들었습니다. 



(개발환경)

CSS 작성 시에 LESS 를 활용하고 있는데 수동으로 LESS 를 빌드하려면 저장을 할 때마다 빌드 명령어를 쳐줘야 한다는 단점이 있었습니다.
그래서 아래와 같이 환경을 구축하여 개발 시간을 단축하였습니다. 

NPM 에서 실행 파일 변경을 감지하고 Gulp 를 실행하면 Gulp 에서 LESS 를 컴파일하고, LESS 가 CSS 로 컴파일되어 나오는 형태입니다. 




(동영상외부호스팅)

오뚜기 사이트의 리뉴얼 목표 중 하나가 홈페이지가 보유한 동영상 컨텐츠들을 사이트 내에서 적극적으로 활용하는 것이었습니다. 
때문에 사이트 내에 동영상을 보여주는 곳이 여러 곳 존재하게 되었고 
이러한 동영상들을 직접 서비스 하기에는 트래픽 부담이 있을 것 같아 Cloudinary 서비스를 활용해 동영상을 외부 호스팅에서 서비스하도록 하였습니다. 


      
(웹표준 검사)

다음과 같이 HTML 과 CSS 기준으로 웹 표준 검사를 시행하여 통과하였습니다.


(전체화면)
먼저 전체 화면 모습을 보여드리고 부분부분 기능들을 소개하도록 하겠습니다. 



(전체화면)

메인 화면은 최상단에 헤더가 있고 그다음 회사 소개 화면
신제품소개
뉴스
인기상품
레시피
공장체험유도
미디어 속 오뚜기 순서로 내용이 구성되어 있습니다 .

다음은 제품 목록 페이지 인데요. 브레드스크럼, 광고용 배너가 나오고
제품 목록을 볼 수 있습니다.

다음은 제품 상세 페이지이고 제품에 대한 상세 내용을 확인할 수 있습니다. 


(웹접근성)

탭을 활용해사 사이트를 탐색할 때 내용으로 바로 갈 수 있는 링크를 구현하여 각 페이지에 삽입해주었습니다.


(메인 헤더)
메인 헤더는 좌상단에 오뚜기몰 바로가기 링크가 있고 가운데에 로고, 오른쪽에 메뉴 버튼이 있습니다.
아래에는 서브메뉴가 있습니다.

태블릿에서는 화면이 좁아지고 검색하기가 위쪽 메뉴로 올라가서 누르면 나오게 바뀝니다. 

모바일에서는 버튼이 늘어나지 않습니다. 

사이트 전체적으로 이미지들은 로고 및 작은 이미지들은 스프라이트 이미지를 활용 하였고 Retina.js 를 활용해서 Ratio 에 따라서 2배짜리 이미지를 보여줄 수 있도록 하였습니다. 


(서브메뉴)
서브메뉴는 헤더에 마우스 오버하면 아래로 스르륵 내려옵니다. 
메뉴에 해당하는 이미지도 나옵니다.

모바일의 경우 좌상단 메뉴버튼을 누르면 메뉴가 나오며 메뉴들이 아래로 쌓이게 구현하였습니다. 


(버튼)
기본 버튼은 동그랗게 생겼지만 마우스를 오버하면 스르륵 펼쳐진다. 
드롭다운 메뉴는 클릭하면 아래에 내용이나옴.
모바일때는 버튼이 확장되지 않는다.

네모버튼은 마우스 오버하면 글자와 아이콘이 색깔이 바뀐다. 
입력창은 입력하고 있을 때에만 노랗게 하이라이트를 만들어준다.



(배너)

bxSlider 활용, 페이징 없이 좌, 우 화살표로 조작.
모바일 화면은 작게 줄어들기만 한다.


(회사소개)

홍보문구와 아이콘들. 
배경은 화면에 꽉 차는 비디오가 자동 재생된다.

태블릿에서는 비디오가 꽉차지 않는다. 

모바일에서는 다른 크기의 아이콘을 사용한다. 

원페이지스크롤(fullpage) 
PC 메인화면은  fullpage.js 라이브러리를 활용하여 
스크롤 하면페이지별로 이동
태블릿과 모바일에서는 원페이지 동작을 막아두었다.

fullPage.js 옵션
원페이지 동작을 위해 fullpage.js 라이브러리를 활용하였는데 옵션이 복잡하고 어려운 부분이 있어 개발하면서 공부한 내용들을 소개하도록 하겠습니다. 


화면에 꽉찬 비디오
태블릿 사이즈 이상일 때는 원페이지 스크롤을 위해 비디오가 화면에 꽉차게 나와야 하기 때문에 리사이즈할 때마다 비디오 크기를 js 로 지정해주었다



- 신제품소개 


- 뉴스

- 인기상품

- 레시피

- 공장체험

- 미디어속오뚜기

- 푸터버튼

- 서브 헤더 

- 상품목록 

- 상품상세
  
